function Get-DevOpsProjects {

    [cmdletbinding()]
    param(
        [Parameter()]
        [ValidateSet([DevOpsOrganization])]
        $Organization = [DevOpsOrganization]::CURRENT
    )

    Connect-AzAccount

    $RequestBlueprint = @{
        METHOD       = 'GET'
        CALL         = 'ORG'
        DOMAIN       = 'dev.azure'
        Property     = 'value'
        Organization = $Organization
    }

    $basePath = "\Documents\repos\__$($Organization.toUpper())"
    

    $projects = Invoke-DevOpsRest @RequestBlueprint -API '_apis/projects?api-version=6.0' `
  | Select-Object -Property name, `
    @{
        Name       = 'ShortName'; 
        Expression = { "__$($_.Name)".replace(' ', '') } 
    }, `
    @{
        Name       = 'Projectpath'; 
        Expression = { Join-Path -Path $basePath -ChildPath $_.name } 
    }, `
    @{      
        Name       = 'Teams'; 
        Expression = {  
            Invoke-DevOpsRest @RequestBlueprint -API "/_apis/projects/$($_.id)/teams?mine={true}&api-version=6.0" 
        }
    }, `
    @{
        Name = 'Repositories'; Expression = {  
            Invoke-DevOpsRest @RequestBlueprint -API "/$($_.id)/_apis/git/repositories?api-version=4.1"
        }
    }, `
        visibility, id, url


    $projects | ForEach-Object {
        $projectPath = $_.Projectpath

        $_.Repositories | ForEach-Object {
            $_ | Add-Member -MemberType NoteProperty -Name 'Localpath' -Value (Join-Path -Path $projectPath -ChildPath $_.name) -PassThru
        }
    }

    Update-SecretStore ORG $Organization -SecretPath CACHE.DEVOPS_REPOSITORIES_ALL -SecretValue $projects.Repositories



    $projects | ForEach-Object { 

        $_.Repositories = ($_.Repositories | Select-Object -Property `
            @{Name = 'Repository'; Expression = {
                    [PSCustomObject]@{
                        id            = $_.id
                        name          = $_.name
                        url           = $_.url
                        remoteUrl     = $_.remoteUrl
                        defaultBranch = $_.defaultBranch
                        Localpath     = $_.Localpath
                    }
                }
            }).Repository
    }
   
    Update-SecretStore ORG $Organization -SecretPath CACHE.DEVOPS_PROJECTS -SecretValue $projects
    Update-SecretStore ORG $Organization -SecretPath CACHE.AZURE_TENANTS -SecretValue (Get-AzTenant)

}